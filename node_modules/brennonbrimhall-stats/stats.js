module.exports = Stats;

function Stats(data) {
	//Saving data in object and a sorted version
	this.data = data.slice(0);
	this.sorted = data.slice(0).sort(function(a,b){return a-b});
}
	
Stats.prototype.mean = function(){
	var sum = 0;
	for(var i = 0; i < this.data.length; ++i){
		sum += this.data[i];
	}
	
	return sum/this.data.length;
};

Stats.prototype.sum = function(){
	var sum = 0;
	for(var i = 0; i < this.data.length; ++i){
		sum += this.data[i];
	}
	
	return sum;
};

Stats.prototype.standardDeviation = function() {
	var mean = this.mean();
	var deviation = 0;
	for(var i = 0; i < this.data.length; ++i){
		deviation += Math.pow((this.data[i] - mean), 2);
	}
	
	var variance = deviation/this.data.length;
	return Math.pow(variance, 0.5);
};

Stats.prototype.sampleStandardDeviation = function() {
	var mean = this.mean();
	var deviation = 0;
	for(var i = 0; i < this.data.length; ++i){
		deviation += Math.pow((this.data[i] - mean), 2);
	}
	
	var stdDev = deviation/(this.data.length -1);
	return Math.pow(stdDev, 0.5);
};

Stats.prototype.min = function() {
	return this.sorted[0];	
};

Stats.prototype.q1 = function(){
	var q1Index = Math.floor((this.sorted.length+1)/4)-1;
	return this.sorted[q1Index];
};

Stats.prototype.median = function(){
	var medianIndex = Math.floor((this.sorted.length+1)/2)-1;
	return this.sorted[medianIndex];
};

Stats.prototype.q3 = function(){
	var q3Index = Math.floor((this.sorted.length+1)*3/4)-1;
	return this.sorted[q3Index];
};

Stats.prototype.max = function(){
	return this.sorted[(this.sorted.length-1)];
};

Stats.prototype.iqr = function() {
	return this.q3() - this.q1();
};

Stats.prototype.zScore = function(x) {
	return (x-this.mean())/this.standardDeviation();
};

Stats.prototype.sampleZScore = function(x) {
	return (x-this.mean())/this.sampleStandardDeviation();
};